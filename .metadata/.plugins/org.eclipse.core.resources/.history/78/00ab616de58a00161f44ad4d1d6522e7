package edu.uoc.ictflag.security.web;

import java.net.URL;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.core.Context;

import edu.uoc.ictflag.core.log.LogHelper;
import edu.uoc.lti.LTIEnvironment;

@Stateless
@LocalBean
@Path("/lti")
public class LTIProvider
{
	@Inject
	LoginController loginController;
	
	@POST
	//	@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	public void loginByLTI(@Context HttpServletRequest request, @Context HttpServletResponse response) throws Exception
	{
		try
		{
			request.setCharacterEncoding("UTF-8");
			
			//1. Load configuration file
			URL resource = getClass().getResource("/authorizedConsumersKey.properties");
			
			//2. Check if LTI call is valid
			LTIEnvironment LTIEnvironment = new LTIEnvironment(resource.getPath());
			if (LTIEnvironment.is_lti_request(request))
			{
				LTIEnvironment.parseRequest(request);
				if (LTIEnvironment.isAuthenticated())
				{
					
					//3. Get the values of user and course  	 
					String username = LTIEnvironment.getUserName();
					
					//TODO mirar si cal posar
					/*if (username.startsWith(LTIEnvironment.getResourcekey()+":")) {
						 username = username.substring((LTIEnvironment.getResourcekey()+":").length());
					}*/
					
					//					String full_name = LTIEnvironment.getFullName();
					//					String email = LTIEnvironment.getEmail();
					//String user_image = LTIEnvironment.getUser_image();
					
					//4. Get the role
					//					boolean is_instructor = LTIEnvironment.isInstructor();
					//					boolean is_course_autz = LTIEnvironment.isCourseAuthorized();
					
					//5. Get course data
					//					String course_key = LTIEnvironment.getCourseKey();
					//					String course_label = LTIEnvironment.getCourseName();
					//					String resource_key = LTIEnvironment.getResourceKey();
					//					String resource_label = LTIEnvironment.getResourceTitle();
					
					//6. Get the locale
					//					String locale = LTIEnvironment.getLocale();
					
					//7. If you need get custom parameters you can do, is not needed to add custom_ prefix to property
					//String custom_param 	= LTIEnvironment.getCustomParameter("property", request);
					
					
					//Steps to integrate with your applicationa
					//6. Check if username exists in system
					//6.1 If doesn't exist you have to create user using Tool Api
					//TODO create_user
					//6.2 If exists you can update the values of user (if you want)
					//TODO update_user
					//7. Check if course exists in system (you can set the locale of course)
					//7.1 If doesn't exist you have to create course using Tool Api
					//TODO create_course
					//7.2 If exists you can update the values of course (if you want)
					//TODO update_course
					//8. Register user in course 
					
					LogHelper.info("LTIProvider - username: " + username);
					
					if (loginController.validateUsernameLti(username))
					{
						response.setStatus(HttpServletResponse.SC_TEMPORARY_REDIRECT);
						response.setHeader("Location", "/private/index.xhtml");
					}
					else
					{
						response.setStatus(HttpServletResponse.SC_TEMPORARY_REDIRECT);
						response.setHeader("Location", "/login.xhtml");
					}
				}
				else
				{
					Exception lastException = LTIEnvironment.getLastException();
					
					//Retornar excepcio
					LogHelper.error("Error LTI authentication " + (lastException != null ? lastException.getMessage() : ""));
				}
			}
			else
			{
				LogHelper.error("LTIProvider - Error LTI authentication is not a valid LTI request");
			}
		}
		catch (Exception ex)
		{
			LogHelper.error(ex);
		}
	}
}
