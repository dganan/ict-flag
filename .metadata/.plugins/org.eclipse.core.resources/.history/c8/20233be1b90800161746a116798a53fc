package edu.uoc.ictflag.ela.web;

import java.io.Serializable;
import java.util.List;

import javax.faces.context.FacesContext;
import javax.faces.view.ViewScoped;
import javax.inject.Inject;
import javax.inject.Named;

import org.primefaces.model.chart.Axis;
import org.primefaces.model.chart.AxisType;
import org.primefaces.model.chart.BarChartModel;
import org.primefaces.model.chart.ChartSeries;

import edu.uoc.ictflag.core.log.ActivityLog;
import edu.uoc.ictflag.core.log.LogHelper;
import edu.uoc.ictflag.core.web.NavigationHelper;
import edu.uoc.ictflag.core.web.SessionBean;
import edu.uoc.ictflag.ela.bll.IExercisesReportManager;

@Named
@ViewScoped
public class ExercisesReportController implements Serializable
{
	private static final long serialVersionUID = 1L;
	
	@Inject
	IExercisesReportManager exercisesReportManager;
	
	private BarChartModel outcomesBarChartModel;
	 
	@ActivityLog
	public void initialize() throws Exception
	{
		try
		{
			if (!FacesContext.getCurrentInstance().isPostback())
			{
				createModels();
			}
		}
		catch (Exception e)
		{
			LogHelper.error(e);
			
			NavigationHelper.redirectTo404();
		}
	}

	 
	public BarChartModel getOutcomesBarChartModel()
	{
		return outcomesBarChartModel;
	}
	 
	private void createModels() throws Exception
	{
		createOutcomesModels();
	}
	     
	private void createOutcomesModels() throws Exception
	{
		outcomesBarChartModel = new BarChartModel();
		
		ChartSeries outcome = new ChartSeries();
		outcome.setLabel("Outcome");
		outcomesBarChartModel.addSeries(outcome);
		
		List<Object[]> outcomesData = exercisesReportManager.getOutcomesData(SessionBean.getUsername());
		
		long max = 0;
		
		for (Object[] exercise : outcomesData)
		{
			outcome.set("Right", (Number) exercise[0]);
			max = Math.max(max, (long) exercise[0]);
			
			outcome.set("Wrong", (Number) exercise[1]);
			max = Math.max(max, (long) exercise[1]);
			
			outcome.set("Timeout", (Number) exercise[2]);
			max = Math.max(max, (long) exercise[2]);
			
			outcome.set("Error", (Number) exercise[3]);
			max = Math.max(max, (long) exercise[3]);
		}
		
		outcomesBarChartModel.setTitle("Outcomes");
		outcomesBarChartModel.setLegendPosition("ne");
	         
		Axis xAxis = outcomesBarChartModel.getAxis(AxisType.X);
		xAxis.setLabel("Outcome");
	         
		Axis yAxis = outcomesBarChartModel.getAxis(AxisType.Y);
		yAxis.setLabel("#");
		yAxis.setMin(0);
		yAxis.setMax(max + 10);
	}
	
	private void createOutcomesModels_OLD() throws Exception
	{
		outcomesBarChartModel = new BarChartModel();
		
		ChartSeries right = new ChartSeries();
		right.setLabel("Right");
		
		ChartSeries wrong = new ChartSeries();
		wrong.setLabel("Wrong");
		
		ChartSeries timeout = new ChartSeries();
		timeout.setLabel("Timeout");
		
		ChartSeries error = new ChartSeries();
		error.setLabel("Error");
		
		outcomesBarChartModel.addSeries(right);
		outcomesBarChartModel.addSeries(wrong);
		outcomesBarChartModel.addSeries(timeout);
		outcomesBarChartModel.addSeries(error);
		
		List<Object[]> outcomesData = exercisesReportManager.getOutcomesData(SessionBean.getUsername());
		
		for (Object[] exercise : outcomesData)
		{
			String label = exercise[0] + " - " + exercise[1];
			
			right.set(label, (Number) exercise[2]);
			wrong.set(label, (Number) exercise[3]);
			timeout.set(label, (Number) exercise[4]);
			error.set(label, (Number) exercise[5]);
		}
		
		outcomesBarChartModel.setTitle("Outcomes");
		outcomesBarChartModel.setLegendPosition("ne");
		
		Axis xAxis = outcomesBarChartModel.getAxis(AxisType.X);
		xAxis.setLabel("Outcome");
		
		Axis yAxis = outcomesBarChartModel.getAxis(AxisType.Y);
		yAxis.setLabel("#");
		yAxis.setMin(0);
		yAxis.setMax(200);
	}
}
